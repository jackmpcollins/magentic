[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
check_untyped_defs = true
disable_error_code = ["empty-body"]
disallow_untyped_defs = false
strict = true

[[tool.mypy.overrides]]
module = [
    "litellm",
    "litellm.utils",
]
ignore_missing_imports = true

[tool.poetry]
name = "magentic"
version = "0.11.0"
description = "Seamlessly integrate LLMs as Python functions"
license = "MIT"
authors = ["Jack Collins"]
readme = "README.md"
repository = "https://github.com/jackmpcollins/magentic"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
litellm = {version = ">=1.0.0", optional = true}
openai = ">=1.0"
pydantic = ">=2.0.0"
pydantic-settings = ">=2.0.0"

[tool.poetry.extras]
litellm = ["litellm"]

[tool.poetry.group.dev.dependencies]
mypy = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-clarity = "*"
pytest-cov = "*"

[tool.poetry.group.examples.dependencies]
jupyter = "*"
wikipedia = "*"

[tool.pytest.ini_options]
addopts = "--cov=magentic --cov-report=term-missing -m 'not anthropic and not ollama and not openai'"
markers = [
    "anthropic: Tests that query the Anthropic API. Requires the ANTHROPIC_API_KEY environment variable to be set.",
    "ollama: Tests that query Ollama. Requires ollama to be installed and running on localhost:11434.",
    "openai: Tests that query the OpenAI API. Requires the OPENAI_API_KEY environment variable to be set.",
]

[tool.ruff]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
# Use `ruff linter` to list available linters
# https://beta.ruff.rs/docs/rules/
select = ["ALL"]
ignore = [
   "C90",  # mccabe
     "D",  # pydocstyle
   "ANN",  # flake8-annotations
     "A",  # flake8-builtins
   "COM",  # flake8-commas
    "FA",  # flake8-future-annotations
   "INP",  # flake8-no-pep420
   "SLF",  # flake8-self
   "ARG",  # flake8-unused-arguments
    "TD",  # flake8-todos
   "FIX",  # flake8-fixme
    "PL",  # Pylint
# Compatibility with ruff formatter
  "E501",
"ISC001",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",
]

[tool.ruff.flake8-pytest-style]
mark-parentheses = false

[tool.ruff.isort]
known-first-party = ["magentic"]

[tool.ruff.per-file-ignores]
"examples/*" = [
  "T20",  # flake8-print
]
"tests/*" = [
    "S",  # flake8-bandit
]
