[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
preview = true

[tool.mypy]
check_untyped_defs = true
disable_error_code = ["empty-body"]
disallow_untyped_defs = false
strict = true

[tool.poetry]
name = "magentic"
version = "0.4.0"
description = "Seamlessly integrate LLMs as Python functions"
license = "MIT"
authors = ["Jack Collins"]
readme = "README.md"
repository = "https://github.com/jackmpcollins/magentic"

[tool.poetry.dependencies]
python = ">=3.10"
openai = ">=0.27"
pydantic = ">=2.0.0"
pydantic-settings = ">=2.0.0"

[tool.poetry.group.dev.dependencies]
black = "*"
mypy = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-clarity = "*"
pytest-cov = "*"

[tool.poetry.group.examples.dependencies]
jupyter = "*"
wikipedia = "*"

[tool.pytest.ini_options]
addopts = "--cov=magentic --cov-report=term-missing"
markers = [
    "openai: Tests that query the OpenAI API"
]

[tool.ruff]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
line-length = 120
# Use `ruff linter` to list available linters
# https://beta.ruff.rs/docs/rules/
select = ["ALL"]
ignore = [
  "C90",  # mccabe
    "D",  # pydocstyle
  "ANN",  # flake8-annotations
    "S",  # flake8-bandit
    "A",  # flake8-builtins
  "COM",  # flake8-commas
   "EM",  # flake8-errmsg
   "FA",  # flake8-future-annotations
  "INP",  # flake8-no-pep420
  "T20",  # flake8-print
   "PT",  # flake8-pytest-style
  "SLF",  # flake8-self
  "ARG",  # flake8-unused-arguments
   "TD",  # flake8-todos
  "FIX",  # flake8-fixme
  "PGH",  # pygrep-hooks
   "PL",  # Pylint
  "TRY",  # tryceratops
  "RUF",  # Ruff-specific rules
]

[tool.ruff.isort]
known-first-party = ["magentic"]
